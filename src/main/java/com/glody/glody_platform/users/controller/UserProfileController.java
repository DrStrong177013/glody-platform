package com.glody.glody_platform.users.controller;

import com.glody.glody_platform.users.dto.UserProfileDto;
import com.glody.glody_platform.users.service.UserProfileService;
import io.swagger.v3.oas.annotations.Operation;
import io.swagger.v3.oas.annotations.tags.Tag;
import lombok.RequiredArgsConstructor;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;

/**
 * REST Controller qu·∫£n l√Ω h·ªì s∆° ng∆∞·ªùi d√πng.
 */
@RestController
@RequestMapping("/api/user-profiles")
@RequiredArgsConstructor
@Tag(name = "User Profile Controller", description = "Qu·∫£n l√Ω h·ªì s∆° ng∆∞·ªùi d√πng")
public class UserProfileController {

    private final UserProfileService userProfileService;

    /**
     * L·∫•y th√¥ng tin h·ªì s∆° ng∆∞·ªùi d√πng theo ID.
     *
     * @param userId ID ng∆∞·ªùi d√πng
     * @return H·ªì s∆° ng∆∞·ªùi d√πng
     */
    @Operation(summary = "L·∫•y h·ªì s∆° c·ªßa ch√≠nh m√¨nh (theo userId)")
    @GetMapping("/me")
    public ResponseEntity<UserProfileDto> getMyProfile(@RequestParam Long userId) {
        UserProfileDto profile = userProfileService.getProfile(userId);
        return ResponseEntity.ok(profile);
    }

    /**
     * C·∫≠p nh·∫≠t ho·∫∑c t·∫°o m·ªõi h·ªì s∆° ng∆∞·ªùi d√πng.
     *
     * @param userId ID ng∆∞·ªùi d√πng
     * @param dto    D·ªØ li·ªáu h·ªì s∆°
     * @return Th√¥ng b√°o th√†nh c√¥ng
     */
    @Operation(summary = "L∆∞u ho·∫∑c c·∫≠p nh·∫≠t h·ªì s∆° ng∆∞·ªùi d√πng")
    @PutMapping
    public ResponseEntity<String> saveProfile(
            @RequestParam Long userId,
            @RequestBody UserProfileDto dto) {

        userProfileService.saveOrUpdate(userId, dto);
        return ResponseEntity.ok("üìÑ H·ªì s∆° ng∆∞·ªùi d√πng ƒë√£ ƒë∆∞·ª£c l∆∞u/c·∫≠p nh·∫≠t.");
    }
}
